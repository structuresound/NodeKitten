# Biicode configuration file

[requirements]
	 leif/freetype-gl: 0
	 leif/picojpeg: 0
	 leif/png: 1
	 miguel/sdl2: 4

[parent]
	leif/NodeKittenX: 0

[paths]
    # Local directories to look for headers (within block)
    ./
    Platform/SDL
    Event/
    Node/
    Shader/
    Texture/
    Types/
    Utils/
    View/
    Examples/

[dependencies]
    # Manual adjust file implicit dependencies, add (+), remove (-), or overwrite (=)
    # hello.h + hello_imp.cpp hello_imp2.cpp
    # *.h + *.cpp
    #Example/ExampleScene.h + Example/ExampleScene.cpp
    Platform/Cocoa/NKAppleDeviceTools.h + Platform/Cocoa/NKAppleDeviceTools.mm
    Platform/Cocoa/NKAppleViews.h + Platform/Cocoa/NKAppleViews.mm
    Platform/Cocoa/NKGLManager.h + Platform/Cocoa/NKGLManager.mm
    Platform/Cocoa/NKAppleEvent.h + Platform/Cocoa/NKAppleEvent.mm

[mains]
    # Manual adjust of files that define an executable
    !Platform/SDL/NKSDLView.cpp  # Do not build executable from this file
    !Platform/Emscripten/NKEmscriptenView.cpp  # Do not build executable from this file
    main.cpp
    # main2.cpp # Build it (it doesnt have a main() function, but maybe it includes it)

[tests]
    # Manual adjust of files that define a CTest test
    # test/* pattern to evaluate this test/ folder sources like tests

[hooks]
    # These are defined equal to [dependencies],files names matching bii*stage*hook.py
    # will be launched as python scripts at stage = {post_process, clean}
    # CMakeLists.txt + bii/my_post_process1_hook.py bii_clean_hook.py

[includes]
    # Mapping of include patterns to external blocks
    # hello*.h: user3/depblock  # includes will be processed as user3/depblock/hello*.h
    SDL.h: miguel/sdl2/include
    zlib.h: leif/zlib
    png.h: leif/png
    picojpeg_util.h: leif/picojpeg
    texture-atlas.h: leif/freetype-gl
    texture-font.h: leif/freetype-gl
    freetype-gl.h: leif/freetype-gl

[data]
    # Manually define data files dependencies, that will be copied to bin for execution
    # By default they are copied to bin/user/block/... which should be taken into account
    # when loading from disk such data
    # image.cpp + image.jpg  # code should write open("user/block/image.jpg")

